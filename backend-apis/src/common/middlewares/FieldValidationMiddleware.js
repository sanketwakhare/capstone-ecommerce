const { validationResult } = require("express-validator");

const ValidationError = require("../errors/ValidationError");

/**
 * Middleware to handle validation errors generated by express-validator.
 * Throws a custom ValidationError if validation errors are present.
 * @param {Object} req - Express request object.
 * @param {Object} res - Express response object.
 * @param {Function} next - Express next function.
 */
const fieldValidationMiddleware = async (req, res, next) => {
  try {
    const result = validationResult(req);

    // If there are validation errors, throw a custom ValidationError
    if (!result.isEmpty()) {
      throw new ValidationError(result.errors);
    }

    // If no validation errors, proceed to the next middleware/route
    next();
  } catch (error) {
    // If an error occurs during validation, pass it to the error-handling middleware
    next(error);
  }
};

module.exports = { fieldValidationMiddleware };
